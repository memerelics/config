# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'atom-workspace':
  'ctrl-cmd-shift-d': 'date:date'
  'ctrl-cmd-shift-t': 'date:time'

# 'atom-text-editor.vim-mode:not(.normal-mode)':
#   'ctrl-space': 'vim-mode:activate-normal-mode'
'atom-text-editor.vim-mode-plus:not(.normal-mode)':
  'ctrl-space': 'vim-mode-plus:activate-normal-mode'
  'ctrl-g': 'vim-mode-plus:activate-normal-mode'

'atom-text-editor':
  'ctrl-shift-space': 'autocomplete-plus:activate'

'.platform-darwin atom-text-editor':
  'cmd-alt-r': 'script:run'

# https://github.com/atom/autocomplete-plus#remapping-movement-commands
'body atom-text-editor.autocomplete-active':
  'ctrl-p': 'autocomplete-plus:move-up'
  'ctrl-n': 'autocomplete-plus:move-down'
'atom-text-editor.autocomplete-active':
  'escape': 'autocomplete-plus:cancel'
  # 'ctrl-g': 'autocomplete-plus:cancel'
